- name: Install and configure zabbix agent
  hosts: tags_zabbix-agent
  become: True
  gather_facts: yes

  vars_files:
    - ~/projects/netbox-sync/vars/external_vars.yml.sample

  tasks:
    - name: Get host info
      local_action:
        module: community.zabbix.zabbix_host_info
        server_url: "{{zabbix_server_url}}"
        login_user: "{{zabbix_user}}"
        login_password: "{{zabbix_pass}}"
        timeout: 10
        exact_match: no
        remove_duplicate: yes
        host_name: "{{ ansible_fqdn }}"
      register: zabbix_contents
      ignore_errors: yes

    # install packages
    - name: install packages
      apt:
        state: present
        name:
          - zabbix-agent
      when: "'hosts' not in zabbix_contents"          

    - name: inside etc/hosts, change hostname to real ip, not loopback 
      lineinfile:
        path: /etc/hosts
        state: present
        line: "{{ item }}"
      with_items:
        - "{{ primary_ip4 }} {{ ansible_fqdn }} {{ inventory_hostname }}"
      when: "'hosts' not in zabbix_contents"        
        
    - name: Comment out default /etc/hosts
      lineinfile:
        path: /etc/hosts
        state: absent
        line: "{{ item }}"
      with_items:
        - "127.0.1.1 {{ ansible_fqdn }} {{ inventory_hostname }}"
      when: "'hosts' not in zabbix_contents"                
        
    # ZABBIX
    - name: Zabbix - Remove zabbix server loopback
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        state: absent
        line: "{{ item }}"
      with_items:
        - 'Server=127.0.0.1'
        - 'ServerActive=127.0.0.1'
      when: "'hosts' not in zabbix_contents"                

    # ZABBIX
    - name: Zabbix - Remove zabbix old Metadata
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        state: absent        
        regexp: '^HostMetadata'
      when: "'hosts' not in zabbix_contents"                
      
    - name: Zabbix - Configure zabbix server
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        state: present
        line: "{{ item }}"
      with_items:
        - 'Server=monitor.golesuite.com'
        - 'ServerActive=monitor.golesuite.com'
        - "Hostname={{ ansible_fqdn }}"
        - "HostMetadata=platform:{{ platforms[0] }} - tenant:{{ tenants[0] }} - device_role:{{ device_roles[0] }} - {{ tags }}"
      when: "'hosts' not in zabbix_contents"
        
    - name: start_restart_zabbix_agent
      service:
        name: zabbix-agent
        state: restarted
        enabled: yes
      when: "'hosts' not in zabbix_contents"

    - name: Pause for 1 minute. Zabbix registry
      pause:
        minutes: 1
      when: "'hosts' not in zabbix_contents"

    - name: Get host info again
      local_action:
        module: community.zabbix.zabbix_host_info
        server_url: "{{zabbix_server_url}}"
        login_user: "{{zabbix_user}}"
        login_password: "{{zabbix_pass}}"
        timeout: 10
        exact_match: no
        remove_duplicate: yes
        host_name: "{{ ansible_fqdn }}"
      register: zabbix_contents
      ignore_errors: yes

    - name: Updating dict to false
      set_fact:
        config_context: '{{ config_context|combine({"zabbix_status": false})}}'
      register: local_config_context
      when: "'hosts' not in zabbix_contents"

    - name: Updating dict to true
      set_fact:
        config_context: '{{ config_context|combine({"zabbix_status": true})}}'
      register: local_config_context
      when: "'hosts' in zabbix_contents"

    - name: Updating config_context 
      local_action:
        module: netbox.netbox.netbox_virtual_machine
        netbox_url: "{{netbox_url}}"
        netbox_token: "{{netbox_token}}"
        data:
          cluster: "{{ cluster }}"
          name: "{{ ansible_fqdn.split('.')[0] }}"
          local_context_data: "{{ local_config_context.ansible_facts.config_context }}"
        state: present
